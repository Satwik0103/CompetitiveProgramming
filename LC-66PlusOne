class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        // int c=0;
      
        // int n=digits.size();
        // cout<<n;
        // vector<int>newDig(n+1);
        // if(digits[n-1]==9){
        // digits[n-1]=0;
        // c=1;
        // for(int i=digits.size()-2;i>=0;i--){
        //     cout<<c<<endl;
        //     if(digits[i]==9){
        //         if(c==1){
        //         digits[i]=0;
        //         c=1;
        //         }
        //     }
        //     else{
        //     digits[i]=c+digits[i];
        //     c=0;
        //     }
        // }
        // if(c==1){
        //     newDig[0]=1;
        //     for(int i=0;i<n;i++){
        //         newDig[i+1]=digits[i];
        //     }
        //     return newDig;
        // }
        // }
        // else
        // digits[n-1]=digits[n-1]+1;
        // return digits;

        int n=digits.size(); int i,sum=0,temp;
        i=n-1;
        while(i>=0){
            if(digits[i]<9){
                digits[i]++;
                return digits;
            }
            digits[i]=0;
            i--;
        }
        if(digits[0]==0){
            digits.insert(digits.begin(),1);
            
        }
        return digits;
    }
};
