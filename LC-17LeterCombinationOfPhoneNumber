// class Solution {
// public:
//     vector<string> letterCombinations(string digits) {
//         map<string, vector<string>> mp;
//         vector<string> ans;
//         mp["2"]={"a","b","c"};
//         mp["3"]={"d","e","f"};
//         mp["4"]={"g","h","i"};
//         mp["5"]={"j","k","l"};
//         mp["6"]={"m","n","o"};
//         mp["7"]={"p","q","r","s"};
//         mp["8"]={"t","u","v"};
//         mp["9"]={"w","x","y","z"};

//         for(int i=0;i<digits.length;i++){
//             for(int j=i+1;j<digits.length;j++)
//         }
        
//         for (const string& element : mp["2"]) {
//             ans.push_back(element);
            
//         }
    
//         return ans;
        
//     }
// };

class Solution {
public:
    vector<string> letterCombinations(string digits) {
        if(digits.empty()){
            return {};
        }
        vector<string> pad = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        vector<string> output;
        output.push_back("");
        for(auto key : digits){
            vector<string> temp;
            for(auto candidate : pad[key-'0']){
                for(auto c : output){
                    temp.push_back(c + candidate);
                }
            }
            output.clear();
            output = temp;
        }
        return output;
    }
};
