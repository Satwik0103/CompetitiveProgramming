/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    pair<bool,int> isTruelybalanced(TreeNode* root){
        if(root==NULL){
            pair<bool,int>p=make_pair(true,0);
            return p;
        }
        pair<bool,int>leftAns=isTruelybalanced(root->left);
        pair<bool,int>rightAns=isTruelybalanced(root->right);
        bool op1=leftAns.first;
        bool op2=rightAns.first;
        bool op3=abs(leftAns.second-rightAns.second)<=1;
        pair<bool,int>ans;
        if(op1==true &&op2==true &&op3==true)
        ans.first=true;
        else
        ans.first=false;
        ans.second=max(leftAns.second,rightAns.second)+1;
        return ans;
    }
    bool isBalanced(TreeNode* root) {
        pair<bool,int>ans= isTruelybalanced(root);
        return ans.first;
        
    }
};
