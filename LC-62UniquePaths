class Solution {
public:
    int findPath(int m, int n, int x, int y, vector<vector<int>>&dp) {
        if (x == m - 1 && y == n - 1) {
            return 1;
        }
        if(dp[x][y]!=-1){
            return dp[x][y];
        }
        int right = 0, bottom = 0;
        if (x < m - 1) {
            right = findPath(m, n, x + 1, y,dp);
        }
        if (y < n - 1) {
            bottom = findPath(m, n, x, y + 1,dp);
        }
        return dp[x][y]=right + bottom;
    }

    int uniquePaths(int m, int n) {
        vector<vector<int>>dp(m,vector<int>(n,-1));
        return findPath(m, n, 0, 0,dp);
    }
};
