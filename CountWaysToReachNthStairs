#include <bits/stdc++.h> 
#define MOD 1000000007
int solveMem(int n,vector<int>dp){
    if(n==0)
        return 1;
    if(n==1)
        return 1;
    if(dp[n]!=-1)
        return (dp[n]%MOD);
    int ans=0;
   ans=(solveMem(n-1,dp)+solveMem(n-2,dp))%MOD;
    dp[n]=ans;
//     cout<<dp[n]<<endl;
    return ans;
}
int solveTab(int n){
    vector<int>dp(n+1,0);
    dp[0]=1;
    dp[1]=1;
    for(int i=2;i<=n;i++){
        dp[i]=(dp[i]+dp[i-1]+dp[i-2])%MOD;
    }
    return dp[n];
}
int solveSpaceOpt(int n){
    int prev2=1;
    int prev1=1;
    int ans=0;
    for(int i=2;i<=n;i++){
        ans=(prev1+prev2)%MOD;
        prev2=prev1;
        prev1=ans;
    }
    return prev1;
}
int countDistinctWays(int nStairs) {
    //  Write your code here.
//     vector<int> dp(nStairs+1,-1);
//     int ans=solveMem(nStairs,dp);
    //int ans=solveTab(nStairs);
    int ans =solveSpaceOpt(nStairs);
    return ans;
}
