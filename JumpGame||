class Solution {
public:

    // Top Down

    // vector<int> arr;
    // vector<int> dp;

    // int helper(int idx){
    //     if(idx>=arr.size()) return INT_MAX-10;
    //     if(idx==arr.size()-1) return 0;

    //     if(dp[idx]!=-1) return dp[idx];
    //     int ans = INT_MAX-10;

    //     for(int i=1; i<=arr[idx]; i++){
    //         ans = min(ans,helper(idx+i));
    //     }
    //     return dp[idx] = ans+1;
    // }

    // Bottom Up

    int helper2(vector<int> arr){
        vector<int> dp(10005,INT_MAX-10);
        dp[arr.size()-1]=0;

        for(int idx=arr.size()-2; idx>=0; idx--){
            int ans = INT_MAX-10;

            for(int i=1; i<=arr[idx]; i++){
                if(idx+i>=arr.size()) continue;
                ans = min(ans,dp[idx+i]);
            }
            dp[idx] = ans+1;
        }
        return dp[0];
    }
    
    int jump(vector<int>& nums) {
        // dp.resize(10005,-1);
        // arr = nums;
        return helper2(nums);
    }
};
