class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        // map<char,int>mp;
        // queue<int>q;
        // for(int i=0;i<s.length();i++)
        // mp.insert(pair<char, int>(s[i],0));
        // int ans=0;
        // for(int j=0;j<s.length();j++){
        //     if(mp[j].second()==0)
        //     q.push(mp[j]);
        //     else{
        //         if(q.front==mp[j].first())
        //         continue;
        //         else
        //         q.pop();
        //     }
        //     if(ans>=q.size())
        //     ans=q.size();
        // }
        // return ans;

          int length=0 , maxlength=0,j=0;
        map<char ,int> mp;
        for(int i=0 ;i<s.size(); i++){
            mp[s[i]]++;
            length++;
                while(mp[s[i]]>1){
                    mp[s[j++]]--;
                    length--;
                }
            maxlength = max(maxlength,length);
        }
        return maxlength;
        
    }
};
