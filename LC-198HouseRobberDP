class Solution {
public:
    int solveRec(vector<int>&nums,int n){
        if(n<0)
        return 0;
        if(n==0)
        return nums[0];
        int inc=solveRec(nums,n-2)+nums[n];
        int exc=solveRec(nums,n-1);
        int ans=max(inc,exc);
        return ans;
    }
    int solveMem(vector<int>nums,int n,vector<int>dp){
        if(n<0)
        return 0;
        if(n==0)
        return nums[0];
        if(dp[n]!=-1)
        return dp[n];
        int inc=solveMem(nums,n-2,dp)+nums[n];
        int exc=solveMem(nums,n-1,dp);
        dp[n]=max(inc,exc);
        return dp[n];
    }
    int solveTab(vector<int>&nums){
        int n=nums.size();
        vector<int>dp(n,0);
        dp[0]=nums[0];

        for(int i=1;i<n;i++){
            int inc=dp[i-2]+nums[i];
            int exc=dp[i-1]; 
            dp[i]=max(inc,exc);
        }
        return dp[n-1];
    }
int solveSpace(vector<int>nums,int n){
        int inc,exc;
        int prev2=0;
        int prev1=nums[0]; 
        for(int i=1;i<n;i++){
            inc=prev2+nums[i];
            exc=prev1;
             int ans=max(inc,exc);
             prev2=prev1;
             prev1=ans;
        }
       
        return prev1;
    }



    int rob(vector<int>& nums) {
        int n=nums.size();
        //int ans=solveRec(nums,n-1);
        //vector<int>dp(n,-1);
        //int ans=solveMem(nums,n-1,dp);
        //int ans=solveTab(nums);
       int ans=solveSpace(nums,n);
        return ans;
    }
};
