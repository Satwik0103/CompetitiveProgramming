/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    int solve(string a)
    {
        int ans=0;
        int t=a.length()-1;
        for(int i=0;i<a.length();i++)
        {
            if(a[i]=='1')
            {
                ans+=pow(2,t);
            }
            t--;
        }
        return ans;
    }
    void helper(TreeNode* root,string x,vector<string>&s)
    {
        if(root==NULL)return;
        if(root->left==NULL &&root->right==NULL)
        {
            x+=to_string(root->val);
            s.push_back(x);
        }
        x+=to_string(root->val);
        helper(root->left,x,s);
        helper(root->right,x,s);
    }
    int sumRootToLeaf(TreeNode* root) {
        vector<string>s;
        string x="";
        helper(root,x,s);
        int ans=0;
        for(int i=0;i<s.size();i++)
        {
            ans+=solve(s[i]);
        }
        return ans;
    }
};
