//SortArray
//Travese through array 


class Solution {
public:
    int numFactoredBinaryTrees(vector<int>& arr) {
        sort(arr.begin(),arr.end());
        map<int,long long int>mp;
        for(int k=0;k<arr.size();k++){
            mp.insert({arr[k],1});
        }
        for(int i=1;i<arr.size();i++){
            auto it3=mp.find(arr[i]);
            long long int count=0;
            for(int j=0;j<i;j++){
                if(arr[i]%arr[j]==0){
                   auto it= mp.find(arr[i]/arr[j]);
                   auto it2=mp.find(arr[j]);
                   if(it!=mp.end()){
                       count+=(it->second*it2->second);
                   }
                }
            }
            it3->second+=count;
        }
        long long int sum=0;
        for(auto i:mp){
            sum+=i.second;
        }
        return sum%1000000007;

        
    }
};
