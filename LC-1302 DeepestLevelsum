/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void sumDeppestLevel(TreeNode*root,int height,int &maxHeight,int &sum){
        if(maxHeight<height){
            maxHeight=height;
            sum=0;
        }
        if(root->left==NULL && root->right==NULL && height==maxHeight){
             sum=sum+root->val;
        }
        if(root->left!=NULL)
        sumDeppestLevel(root->left,height+1,maxHeight,sum);
       
        if(root->right!=NULL)
        sumDeppestLevel(root->right,height+1,maxHeight,sum);
       
        

    }
    //When In CallBack reference we cannot direct pass value while calling a function like sumDeep(0,1,-1,2) we have to put them in varible (0,1,maxHe,sum) 
    int deepestLeavesSum(TreeNode* root) {
        int sum=0;
        int maxHeight=-1;
        if(root==NULL)
        return 0;
        sumDeppestLevel(root,1,maxHeight,sum);
        return sum;
        
    }
};
