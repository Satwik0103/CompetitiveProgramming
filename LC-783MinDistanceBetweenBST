/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        TreeNode*prev=NULL;
        int min_diff=INT_MAX;
        inOrderTraversal(root,&prev,&min_diff);
        return min_diff;
    }
    void inOrderTraversal(TreeNode* root,TreeNode**prev,int *min_dif){
        if (root==NULL)
        return;
          inOrderTraversal(root->left,prev,min_dif);
        if(*prev!=NULL){
            int diff=abs(root->val-(*prev)->val);
            if(diff<*min_dif)
            *min_dif=diff;
          
        }
        *prev=root;
            inOrderTraversal(root->right,prev,min_dif);
    }
};
