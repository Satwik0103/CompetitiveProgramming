/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorderHelper(TreeNode* root,vector<int>& inorder) {
        if(root == NULL)
            return;

        inorderHelper(root->left,inorder);

        inorder.push_back(root->val);

        inorderHelper(root->right,inorder);
    }

    TreeNode* increasingBST(TreeNode* root) {
        if(root == NULL)
            return NULL;

        vector<int> inorder;

        inorderHelper(root,inorder);

        TreeNode* ans = new TreeNode(-1);
        TreeNode* curr = ans;

        for(auto node : inorder) {
            curr->right = new TreeNode(node);
            curr = curr->right;
        }

        return ans->right;
    }
};
