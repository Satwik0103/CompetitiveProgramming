vector<int> replaceWithRank(vector<int> &arr, int n) {
    map<int, int> mp;
    priority_queue<int, vector<int>, greater<int>> pq;

    for (int i = 0; i < arr.size(); i++) {
        pq.push(arr[i]);
        mp[arr[i]] = -1;
    }

    int cnt = 0;
    
    while (!pq.empty()) {
        int res = pq.top();
       // cout << "Res: " << res << endl;

        if (mp[res] == -1) {
            cnt++;
            mp[res] = cnt;
        } else {
            
            mp[res] = cnt;
        }
        pq.pop();
    }

    

    vector<int> finalRes;
    for (int k = 0; k < arr.size(); k++) {
        finalRes.push_back(mp[arr[k]]);
    }

    return finalRes;
}
