class Solution {
public:
vector<int> nextSmallerElement(vector<int> &arr, int n)
{
    // Write your code here.
    stack<int>s;
    s.push(-1);
    vector<int>sol(n);
    for(int i=n-1;i>=0;i--){
        int ele=arr[i];
         while(s.top()!=-1&&arr[s.top()]>=ele){
            s.pop();
        }
        sol[i]=s.top();
        s.push(i);
        
    }
    return sol;
}
vector<int> prevSmallerElement(vector<int> &arr, int n)
{
    // Write your code here.
    stack<int>s;
    s.push(-1);
    vector<int>sol(n);
    for(int i=0;i<n;i++){
        int ele=arr[i];
        while(s.top()!=-1&&arr[s.top()]>=ele){
            s.pop();
        }
        sol[i]=s.top();
        s.push(i);
        
    }
    return sol;
}
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        vector<int>next(n);
        next=nextSmallerElement(heights,n);
        vector<int>prev(n);
        prev= prevSmallerElement(heights,n);
        int area=INT_MIN;
        for(int k=0;k<n;k++){
            int len=heights[k];
            if(next[k]==-1)
            next[k]=n;
            int bre=next[k]-prev[k]-1;
             int newArea=len*bre;
             area=max(area,newArea);
        }
        return area;
        
    }
};
